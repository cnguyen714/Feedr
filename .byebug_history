c
url_string
s
c
s
n
quit
n
url_exist?(image_url)
exception
image_url
n
image_url
n
content_doc.xpath("//img").first.attributes["src"].value
content_doc.xpath("//img").first.attributes["src"].first
content_doc.xpath("//img").first.attributes["src"]
content_doc.xpath("//img").first
content_doc.xpath("//img")
content_doc
image_url
n
step
s
n
url
feed
c
@sources.empty?
@sources.empty
@sources
c
@sources
c
@sources
n
c
n
c
Source.where("lower(name) like ?", url.downcase).limit(5)
@sources
n
c
@sources
c
Source.where("name like ?", "ko")
Source.where("name like ?", "o")
Source.find_by(name: "o")
Source.all[0]
Source
c
url.slice(0, 7)
url.slice(0, 8)
url.slice(0, 9)
url.slice(0, 8)
url.slice(0, 7)
url.slice(0, 5)
url
c
params
page
c
params
c
page
params
c
@_params
params
parms
c
params
c
params["page"]
params["action"]
params
@articles
n
c
s
quit
c
n
s
c
s
n
c
nc
n
s
c
s
sourced
c
@follow
c
@source
n
@source
sourced
soucred
n
sourced
c
source
c
source_by_name = Source.find_by(name: source_params[:stream_url])
source_by_url = Source.find_by(stream_url: source_params[:stream_url])
source_params[:stream_urasdl]
source_params[:stream_url]
source_params
exit
open(url) do |rss|
end
open(url) do |rss|
end
  end  
    puts "Item: #{entry.title}"
  feed.entry.each do |entry|
  puts "Title: #{feed.title}"
  feed = RSS::Parser.parse(rss)
open(url) do |rss| 
puts "Hi"
end 
  end  
    puts "Item: #{entry.title}"
  feed.entry.each do |entry|
  puts "Title: #{feed.title}"
  feed = RSS::Parser.parse(rss)
end  open(url) do |rss| 
  end  
    puts "Item: #{entry.title}"
  feed.entry.each do |entry|
  puts "Title: #{feed.title}"
  feed = RSS::Parser.parse(rss)
open(url) do |rss| 
c
n
s
n
quit
exit
e
n
@sources
n
feed.sources
feed
n
c
n
feed
n
feed
n
params['feed_id']
q
params['feed_id']
c
user.feeds.to_a.map { |feed|  feed[:id] }
user.feeds.to_a.map( |feed| feed[:id] )
user.feeds.to_a.map( |feed| feed.id )
user.feeds.to_a[0][:id]
user.feeds.to_a[0][:user_id]
user.feeds.to_a
user.feeds
c
@feed
@feed[:user_id] = 4
@feed
c
@feed[:user_id] = 1
c
params['id']
params.id
params(:id)
params
params[id]
params.id
params
c
current_user
@feeds
n
c
User.find_by(email: user_params[:email])
user_params[:email]
user_params
c
params[:username]
params[:user][:username]
@user
